#!/bin/bash

SCENES=(
  intro
  blood
  spiders
  graveyard
  orca
  fur
  frankenphone
  mirror
  fire
  exit
  secret
)

SCENE_DIR="src/scenes"
HEADER_FILE="$SCENE_DIR/scenes.hpp"
COMMON_HEADER="$SCENE_DIR/scene_common.hpp"
MAPPING_CPP="src/mapping.cpp"
README="$SCENE_DIR/README.md"

mkdir -p "$SCENE_DIR"

# Ensure scene_common.hpp exists
if [[ ! -f "$COMMON_HEADER" ]]; then
  echo "using SceneFunction = void (*)();" > "$COMMON_HEADER"
  echo "✅ Created: $COMMON_HEADER"
fi

# Start fresh header
echo "#ifndef SCENES_HPP" > "$HEADER_FILE"
echo "#define SCENES_HPP" >> "$HEADER_FILE"
echo "" >> "$HEADER_FILE"
echo '#include "scene_common.hpp"' >> "$HEADER_FILE"
echo "" >> "$HEADER_FILE"

# Start fresh mapping.cpp
echo "#include \"mapping.hpp\"" > "$MAPPING_CPP"
for scene in "${SCENES[@]}"; do
  echo "#include \"scenes/scene_${scene}.hpp\"" >> "$MAPPING_CPP"
done
echo "" >> "$MAPPING_CPP"
echo "SceneFunction codeToScene(uint8_t code) {" >> "$MAPPING_CPP"
echo "  switch(code) {" >> "$MAPPING_CPP"

# Start README
echo "# Scene Stubs" > "$README"
echo "" >> "$README"
echo "Generated by generate_scene_stubs.sh" >> "$README"
echo "" >> "$README"

# Loop through all scenes
i=0
for name in "${SCENES[@]}"; do
  FUNC="scene_${name}"
  CPP="$SCENE_DIR/${FUNC}.cpp"
  HPP="$SCENE_DIR/${FUNC}.hpp"
  GUARD="SCENE_$(echo "$name" | tr a-z A-Z)_HPP"

  # Create .cpp only if missing
  if [[ ! -f "$CPP" ]]; then
    echo "void ${FUNC}() { /* TODO: implement */ }" > "$CPP"
    echo "✅ Created: $CPP"
  else
    echo "⏩ Skipped (exists): $CPP"
  if

  # Always regenerate .hpp
  cat > "$HPP" <<EOF
#ifndef $GUARD
#define $GUARD

void $FUNC();

#endif
EOF
  echo "✅ Wrote: $HPP"

  # Append declaration to scenes.hpp
  echo "void $FUNC();" >> "$HEADER_FILE"

  # Append to mapping.cpp
  echo "    case $i: return $FUNC;" >> "$MAPPING_CPP"

  # Append to README
  echo "- \`$FUNC()\` → \`$FUNC.cpp/hpp\`" >> "$README"

  ((i++))
done

# Finish mapping.cpp
echo "    default: return scene_standby;" >> "$MAPPING_CPP"
echo "  }" >> "$MAPPING_CPP"
echo "}" >> "$MAPPING_CPP"

# Finish scenes.hpp
echo "" >> "$HEADER_FILE"
echo "#endif" >> "$HEADER_FILE"

echo ""
echo "✅ All stubs generated, header updated, mapping.cpp refreshed, README updated."